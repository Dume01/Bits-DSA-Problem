// C++ program for the above approach
#include <bits/stdc++.h>
using namespace std;
int countKAverageSubarrays(int arr[], int n, int k)
{
	int result = 0, curSum = 0;

	unordered_map<int, int> mp;

	for (int i = 0; i < n; i++) {
		curSum += (arr[i] - k);
		if (curSum == 0)
			result++;

		if (mp.find(curSum) != mp.end())
			result += mp[curSum];
		mp[curSum]++;
	}
	return result;
}
int main(){
	int K = 2;
	int arr[] = { 2,1,3 };
	int N = sizeof(arr) / sizeof(arr[0]);
	cout << countKAverageSubarrays(arr, N, K);
}
